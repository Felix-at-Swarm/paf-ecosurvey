/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["app/interviews/page"],{

/***/ "(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22W%3A%5C%5CCoding%5C%5Cpaf-ecosurvey%5C%5Cgithub%5C%5Cpaf-ecosurvey%5C%5Csrc%5C%5Capp%5C%5Cinterviews%5C%5Cpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false!":
/*!***********************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22W%3A%5C%5CCoding%5C%5Cpaf-ecosurvey%5C%5Cgithub%5C%5Cpaf-ecosurvey%5C%5Csrc%5C%5Capp%5C%5Cinterviews%5C%5Cpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false! ***!
  \***********************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/app/interviews/page.tsx */ \"(app-pages-browser)/./src/app/interviews/page.tsx\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtZmxpZ2h0LWNsaWVudC1lbnRyeS1sb2FkZXIuanM/bW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyVyUzQSU1QyU1Q0NvZGluZyU1QyU1Q3BhZi1lY29zdXJ2ZXklNUMlNUNnaXRodWIlNUMlNUNwYWYtZWNvc3VydmV5JTVDJTVDc3JjJTVDJTVDYXBwJTVDJTVDaW50ZXJ2aWV3cyU1QyU1Q3BhZ2UudHN4JTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJnNlcnZlcj1mYWxzZSEiLCJtYXBwaW5ncyI6IkFBQUEsb0xBQXFIIiwic291cmNlcyI6WyIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCJXOlxcXFxDb2RpbmdcXFxccGFmLWVjb3N1cnZleVxcXFxnaXRodWJcXFxccGFmLWVjb3N1cnZleVxcXFxzcmNcXFxcYXBwXFxcXGludGVydmlld3NcXFxccGFnZS50c3hcIik7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22W%3A%5C%5CCoding%5C%5Cpaf-ecosurvey%5C%5Cgithub%5C%5Cpaf-ecosurvey%5C%5Csrc%5C%5Capp%5C%5Cinterviews%5C%5Cpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false!\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/client-only/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/next/dist/compiled/client-only/index.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {



/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("/**\n * @license React\n * react-jsx-dev-runtime.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n true &&\n  (function () {\n    function getComponentNameFromType(type) {\n      if (null == type) return null;\n      if (\"function\" === typeof type)\n        return type.$$typeof === REACT_CLIENT_REFERENCE\n          ? null\n          : type.displayName || type.name || null;\n      if (\"string\" === typeof type) return type;\n      switch (type) {\n        case REACT_FRAGMENT_TYPE:\n          return \"Fragment\";\n        case REACT_PORTAL_TYPE:\n          return \"Portal\";\n        case REACT_PROFILER_TYPE:\n          return \"Profiler\";\n        case REACT_STRICT_MODE_TYPE:\n          return \"StrictMode\";\n        case REACT_SUSPENSE_TYPE:\n          return \"Suspense\";\n        case REACT_SUSPENSE_LIST_TYPE:\n          return \"SuspenseList\";\n      }\n      if (\"object\" === typeof type)\n        switch (\n          (\"number\" === typeof type.tag &&\n            console.error(\n              \"Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.\"\n            ),\n          type.$$typeof)\n        ) {\n          case REACT_CONTEXT_TYPE:\n            return (type.displayName || \"Context\") + \".Provider\";\n          case REACT_CONSUMER_TYPE:\n            return (type._context.displayName || \"Context\") + \".Consumer\";\n          case REACT_FORWARD_REF_TYPE:\n            var innerType = type.render;\n            type = type.displayName;\n            type ||\n              ((type = innerType.displayName || innerType.name || \"\"),\n              (type = \"\" !== type ? \"ForwardRef(\" + type + \")\" : \"ForwardRef\"));\n            return type;\n          case REACT_MEMO_TYPE:\n            return (\n              (innerType = type.displayName || null),\n              null !== innerType\n                ? innerType\n                : getComponentNameFromType(type.type) || \"Memo\"\n            );\n          case REACT_LAZY_TYPE:\n            innerType = type._payload;\n            type = type._init;\n            try {\n              return getComponentNameFromType(type(innerType));\n            } catch (x) {}\n        }\n      return null;\n    }\n    function testStringCoercion(value) {\n      return \"\" + value;\n    }\n    function checkKeyStringCoercion(value) {\n      try {\n        testStringCoercion(value);\n        var JSCompiler_inline_result = !1;\n      } catch (e) {\n        JSCompiler_inline_result = !0;\n      }\n      if (JSCompiler_inline_result) {\n        JSCompiler_inline_result = console;\n        var JSCompiler_temp_const = JSCompiler_inline_result.error;\n        var JSCompiler_inline_result$jscomp$0 =\n          (\"function\" === typeof Symbol &&\n            Symbol.toStringTag &&\n            value[Symbol.toStringTag]) ||\n          value.constructor.name ||\n          \"Object\";\n        JSCompiler_temp_const.call(\n          JSCompiler_inline_result,\n          \"The provided key is an unsupported type %s. This value must be coerced to a string before using it here.\",\n          JSCompiler_inline_result$jscomp$0\n        );\n        return testStringCoercion(value);\n      }\n    }\n    function getTaskName(type) {\n      if (type === REACT_FRAGMENT_TYPE) return \"<>\";\n      if (\n        \"object\" === typeof type &&\n        null !== type &&\n        type.$$typeof === REACT_LAZY_TYPE\n      )\n        return \"<...>\";\n      try {\n        var name = getComponentNameFromType(type);\n        return name ? \"<\" + name + \">\" : \"<...>\";\n      } catch (x) {\n        return \"<...>\";\n      }\n    }\n    function getOwner() {\n      var dispatcher = ReactSharedInternals.A;\n      return null === dispatcher ? null : dispatcher.getOwner();\n    }\n    function hasValidKey(config) {\n      if (hasOwnProperty.call(config, \"key\")) {\n        var getter = Object.getOwnPropertyDescriptor(config, \"key\").get;\n        if (getter && getter.isReactWarning) return !1;\n      }\n      return void 0 !== config.key;\n    }\n    function defineKeyPropWarningGetter(props, displayName) {\n      function warnAboutAccessingKey() {\n        specialPropKeyWarningShown ||\n          ((specialPropKeyWarningShown = !0),\n          console.error(\n            \"%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://react.dev/link/special-props)\",\n            displayName\n          ));\n      }\n      warnAboutAccessingKey.isReactWarning = !0;\n      Object.defineProperty(props, \"key\", {\n        get: warnAboutAccessingKey,\n        configurable: !0\n      });\n    }\n    function elementRefGetterWithDeprecationWarning() {\n      var componentName = getComponentNameFromType(this.type);\n      didWarnAboutElementRef[componentName] ||\n        ((didWarnAboutElementRef[componentName] = !0),\n        console.error(\n          \"Accessing element.ref was removed in React 19. ref is now a regular prop. It will be removed from the JSX Element type in a future release.\"\n        ));\n      componentName = this.props.ref;\n      return void 0 !== componentName ? componentName : null;\n    }\n    function ReactElement(\n      type,\n      key,\n      self,\n      source,\n      owner,\n      props,\n      debugStack,\n      debugTask\n    ) {\n      self = props.ref;\n      type = {\n        $$typeof: REACT_ELEMENT_TYPE,\n        type: type,\n        key: key,\n        props: props,\n        _owner: owner\n      };\n      null !== (void 0 !== self ? self : null)\n        ? Object.defineProperty(type, \"ref\", {\n            enumerable: !1,\n            get: elementRefGetterWithDeprecationWarning\n          })\n        : Object.defineProperty(type, \"ref\", { enumerable: !1, value: null });\n      type._store = {};\n      Object.defineProperty(type._store, \"validated\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !0,\n        value: 0\n      });\n      Object.defineProperty(type, \"_debugInfo\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !0,\n        value: null\n      });\n      Object.defineProperty(type, \"_debugStack\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !0,\n        value: debugStack\n      });\n      Object.defineProperty(type, \"_debugTask\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !0,\n        value: debugTask\n      });\n      Object.freeze && (Object.freeze(type.props), Object.freeze(type));\n      return type;\n    }\n    function jsxDEVImpl(\n      type,\n      config,\n      maybeKey,\n      isStaticChildren,\n      source,\n      self,\n      debugStack,\n      debugTask\n    ) {\n      var children = config.children;\n      if (void 0 !== children)\n        if (isStaticChildren)\n          if (isArrayImpl(children)) {\n            for (\n              isStaticChildren = 0;\n              isStaticChildren < children.length;\n              isStaticChildren++\n            )\n              validateChildKeys(children[isStaticChildren]);\n            Object.freeze && Object.freeze(children);\n          } else\n            console.error(\n              \"React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.\"\n            );\n        else validateChildKeys(children);\n      if (hasOwnProperty.call(config, \"key\")) {\n        children = getComponentNameFromType(type);\n        var keys = Object.keys(config).filter(function (k) {\n          return \"key\" !== k;\n        });\n        isStaticChildren =\n          0 < keys.length\n            ? \"{key: someKey, \" + keys.join(\": ..., \") + \": ...}\"\n            : \"{key: someKey}\";\n        didWarnAboutKeySpread[children + isStaticChildren] ||\n          ((keys =\n            0 < keys.length ? \"{\" + keys.join(\": ..., \") + \": ...}\" : \"{}\"),\n          console.error(\n            'A props object containing a \"key\" prop is being spread into JSX:\\n  let props = %s;\\n  <%s {...props} />\\nReact keys must be passed directly to JSX without using spread:\\n  let props = %s;\\n  <%s key={someKey} {...props} />',\n            isStaticChildren,\n            children,\n            keys,\n            children\n          ),\n          (didWarnAboutKeySpread[children + isStaticChildren] = !0));\n      }\n      children = null;\n      void 0 !== maybeKey &&\n        (checkKeyStringCoercion(maybeKey), (children = \"\" + maybeKey));\n      hasValidKey(config) &&\n        (checkKeyStringCoercion(config.key), (children = \"\" + config.key));\n      if (\"key\" in config) {\n        maybeKey = {};\n        for (var propName in config)\n          \"key\" !== propName && (maybeKey[propName] = config[propName]);\n      } else maybeKey = config;\n      children &&\n        defineKeyPropWarningGetter(\n          maybeKey,\n          \"function\" === typeof type\n            ? type.displayName || type.name || \"Unknown\"\n            : type\n        );\n      return ReactElement(\n        type,\n        children,\n        self,\n        source,\n        getOwner(),\n        maybeKey,\n        debugStack,\n        debugTask\n      );\n    }\n    function validateChildKeys(node) {\n      \"object\" === typeof node &&\n        null !== node &&\n        node.$$typeof === REACT_ELEMENT_TYPE &&\n        node._store &&\n        (node._store.validated = 1);\n    }\n    var React = __webpack_require__(/*! next/dist/compiled/react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\"),\n      REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\n      REACT_PORTAL_TYPE = Symbol.for(\"react.portal\"),\n      REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\"),\n      REACT_STRICT_MODE_TYPE = Symbol.for(\"react.strict_mode\"),\n      REACT_PROFILER_TYPE = Symbol.for(\"react.profiler\");\n    Symbol.for(\"react.provider\");\n    var REACT_CONSUMER_TYPE = Symbol.for(\"react.consumer\"),\n      REACT_CONTEXT_TYPE = Symbol.for(\"react.context\"),\n      REACT_FORWARD_REF_TYPE = Symbol.for(\"react.forward_ref\"),\n      REACT_SUSPENSE_TYPE = Symbol.for(\"react.suspense\"),\n      REACT_SUSPENSE_LIST_TYPE = Symbol.for(\"react.suspense_list\"),\n      REACT_MEMO_TYPE = Symbol.for(\"react.memo\"),\n      REACT_LAZY_TYPE = Symbol.for(\"react.lazy\"),\n      REACT_CLIENT_REFERENCE = Symbol.for(\"react.client.reference\"),\n      ReactSharedInternals =\n        React.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,\n      hasOwnProperty = Object.prototype.hasOwnProperty,\n      isArrayImpl = Array.isArray,\n      createTask = console.createTask\n        ? console.createTask\n        : function () {\n            return null;\n          },\n      specialPropKeyWarningShown;\n    var didWarnAboutElementRef = {};\n    var didWarnAboutKeySpread = {};\n    exports.Fragment = REACT_FRAGMENT_TYPE;\n    exports.jsxDEV = function (\n      type,\n      config,\n      maybeKey,\n      isStaticChildren,\n      source,\n      self\n    ) {\n      return jsxDEVImpl(\n        type,\n        config,\n        maybeKey,\n        isStaticChildren,\n        source,\n        self,\n        Error(\"react-stack-top-frame\"),\n        createTask(getTaskName(type))\n      );\n    };\n  })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js":
/*!******************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/jsx-dev-runtime.js ***!
  \******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react-jsx-dev-runtime.development.js */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvcmVhY3QvanN4LWRldi1ydW50aW1lLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLElBQUksS0FBcUMsRUFBRSxFQUUxQyxDQUFDO0FBQ0YsRUFBRSw4TEFBc0U7QUFDeEUiLCJzb3VyY2VzIjpbIlc6XFxDb2RpbmdcXHBhZi1lY29zdXJ2ZXlcXGdpdGh1YlxccGFmLWVjb3N1cnZleVxcbm9kZV9tb2R1bGVzXFxuZXh0XFxkaXN0XFxjb21waWxlZFxccmVhY3RcXGpzeC1kZXYtcnVudGltZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LWRldi1ydW50aW1lLnByb2R1Y3Rpb24uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LWRldi1ydW50aW1lLmRldmVsb3BtZW50LmpzJyk7XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/styled-jsx/dist/index/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/styled-jsx/dist/index/index.js ***!
  \*****************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js\");\n\nvar _s = $RefreshSig$(), _s1 = $RefreshSig$(), _s2 = $RefreshSig$();\n__webpack_require__(/*! client-only */ \"(app-pages-browser)/./node_modules/next/dist/compiled/client-only/index.js\");\nvar React = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\nfunction _interopDefaultLegacy(e) {\n    return e && typeof e === 'object' && 'default' in e ? e : {\n        'default': e\n    };\n}\nvar React__default = /*#__PURE__*/ _interopDefaultLegacy(React);\n_c = React__default;\n/*\nBased on Glamor's sheet\nhttps://github.com/threepointone/glamor/blob/667b480d31b3721a905021b26e1290ce92ca2879/src/sheet.js\n*/ function _defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nvar isProd = typeof process !== \"undefined\" && process.env && \"development\" === \"production\";\nvar isString = function(o) {\n    return Object.prototype.toString.call(o) === \"[object String]\";\n};\nvar StyleSheet = /*#__PURE__*/ function() {\n    function StyleSheet(param) {\n        var ref = param === void 0 ? {} : param, _name = ref.name, name = _name === void 0 ? \"stylesheet\" : _name, _optimizeForSpeed = ref.optimizeForSpeed, optimizeForSpeed = _optimizeForSpeed === void 0 ? isProd : _optimizeForSpeed;\n        invariant$1(isString(name), \"`name` must be a string\");\n        this._name = name;\n        this._deletedRulePlaceholder = \"#\" + name + \"-deleted-rule____{}\";\n        invariant$1(typeof optimizeForSpeed === \"boolean\", \"`optimizeForSpeed` must be a boolean\");\n        this._optimizeForSpeed = optimizeForSpeed;\n        this._serverSheet = undefined;\n        this._tags = [];\n        this._injected = false;\n        this._rulesCount = 0;\n        var node = typeof window !== \"undefined\" && document.querySelector('meta[property=\"csp-nonce\"]');\n        this._nonce = node ? node.getAttribute(\"content\") : null;\n    }\n    var _proto = StyleSheet.prototype;\n    _proto.setOptimizeForSpeed = function setOptimizeForSpeed(bool) {\n        invariant$1(typeof bool === \"boolean\", \"`setOptimizeForSpeed` accepts a boolean\");\n        invariant$1(this._rulesCount === 0, \"optimizeForSpeed cannot be when rules have already been inserted\");\n        this.flush();\n        this._optimizeForSpeed = bool;\n        this.inject();\n    };\n    _proto.isOptimizeForSpeed = function isOptimizeForSpeed() {\n        return this._optimizeForSpeed;\n    };\n    _proto.inject = function inject() {\n        var _this = this;\n        invariant$1(!this._injected, \"sheet already injected\");\n        this._injected = true;\n        if (typeof window !== \"undefined\" && this._optimizeForSpeed) {\n            this._tags[0] = this.makeStyleTag(this._name);\n            this._optimizeForSpeed = \"insertRule\" in this.getSheet();\n            if (!this._optimizeForSpeed) {\n                if (!isProd) {\n                    console.warn(\"StyleSheet: optimizeForSpeed mode not supported falling back to standard mode.\");\n                }\n                this.flush();\n                this._injected = true;\n            }\n            return;\n        }\n        this._serverSheet = {\n            cssRules: [],\n            insertRule: function(rule, index) {\n                if (typeof index === \"number\") {\n                    _this._serverSheet.cssRules[index] = {\n                        cssText: rule\n                    };\n                } else {\n                    _this._serverSheet.cssRules.push({\n                        cssText: rule\n                    });\n                }\n                return index;\n            },\n            deleteRule: function(index) {\n                _this._serverSheet.cssRules[index] = null;\n            }\n        };\n    };\n    _proto.getSheetForTag = function getSheetForTag(tag) {\n        if (tag.sheet) {\n            return tag.sheet;\n        }\n        // this weirdness brought to you by firefox\n        for(var i = 0; i < document.styleSheets.length; i++){\n            if (document.styleSheets[i].ownerNode === tag) {\n                return document.styleSheets[i];\n            }\n        }\n    };\n    _proto.getSheet = function getSheet() {\n        return this.getSheetForTag(this._tags[this._tags.length - 1]);\n    };\n    _proto.insertRule = function insertRule(rule, index) {\n        invariant$1(isString(rule), \"`insertRule` accepts only strings\");\n        if (typeof window === \"undefined\") {\n            if (typeof index !== \"number\") {\n                index = this._serverSheet.cssRules.length;\n            }\n            this._serverSheet.insertRule(rule, index);\n            return this._rulesCount++;\n        }\n        if (this._optimizeForSpeed) {\n            var sheet = this.getSheet();\n            if (typeof index !== \"number\") {\n                index = sheet.cssRules.length;\n            }\n            // this weirdness for perf, and chrome's weird bug\n            // https://stackoverflow.com/questions/20007992/chrome-suddenly-stopped-accepting-insertrule\n            try {\n                sheet.insertRule(rule, index);\n            } catch (error) {\n                if (!isProd) {\n                    console.warn(\"StyleSheet: illegal rule: \\n\\n\" + rule + \"\\n\\nSee https://stackoverflow.com/q/20007992 for more info\");\n                }\n                return -1;\n            }\n        } else {\n            var insertionPoint = this._tags[index];\n            this._tags.push(this.makeStyleTag(this._name, rule, insertionPoint));\n        }\n        return this._rulesCount++;\n    };\n    _proto.replaceRule = function replaceRule(index, rule) {\n        if (this._optimizeForSpeed || typeof window === \"undefined\") {\n            var sheet = typeof window !== \"undefined\" ? this.getSheet() : this._serverSheet;\n            if (!rule.trim()) {\n                rule = this._deletedRulePlaceholder;\n            }\n            if (!sheet.cssRules[index]) {\n                // @TBD Should we throw an error?\n                return index;\n            }\n            sheet.deleteRule(index);\n            try {\n                sheet.insertRule(rule, index);\n            } catch (error) {\n                if (!isProd) {\n                    console.warn(\"StyleSheet: illegal rule: \\n\\n\" + rule + \"\\n\\nSee https://stackoverflow.com/q/20007992 for more info\");\n                }\n                // In order to preserve the indices we insert a deleteRulePlaceholder\n                sheet.insertRule(this._deletedRulePlaceholder, index);\n            }\n        } else {\n            var tag = this._tags[index];\n            invariant$1(tag, \"old rule at index `\" + index + \"` not found\");\n            tag.textContent = rule;\n        }\n        return index;\n    };\n    _proto.deleteRule = function deleteRule(index) {\n        if (typeof window === \"undefined\") {\n            this._serverSheet.deleteRule(index);\n            return;\n        }\n        if (this._optimizeForSpeed) {\n            this.replaceRule(index, \"\");\n        } else {\n            var tag = this._tags[index];\n            invariant$1(tag, \"rule at index `\" + index + \"` not found\");\n            tag.parentNode.removeChild(tag);\n            this._tags[index] = null;\n        }\n    };\n    _proto.flush = function flush() {\n        this._injected = false;\n        this._rulesCount = 0;\n        if (typeof window !== \"undefined\") {\n            this._tags.forEach(function(tag) {\n                return tag && tag.parentNode.removeChild(tag);\n            });\n            this._tags = [];\n        } else {\n            // simpler on server\n            this._serverSheet.cssRules = [];\n        }\n    };\n    _proto.cssRules = function cssRules() {\n        var _this = this;\n        if (typeof window === \"undefined\") {\n            return this._serverSheet.cssRules;\n        }\n        return this._tags.reduce(function(rules, tag) {\n            if (tag) {\n                rules = rules.concat(Array.prototype.map.call(_this.getSheetForTag(tag).cssRules, function(rule) {\n                    return rule.cssText === _this._deletedRulePlaceholder ? null : rule;\n                }));\n            } else {\n                rules.push(null);\n            }\n            return rules;\n        }, []);\n    };\n    _proto.makeStyleTag = function makeStyleTag(name, cssString, relativeToTag) {\n        if (cssString) {\n            invariant$1(isString(cssString), \"makeStyleTag accepts only strings as second parameter\");\n        }\n        var tag = document.createElement(\"style\");\n        if (this._nonce) tag.setAttribute(\"nonce\", this._nonce);\n        tag.type = \"text/css\";\n        tag.setAttribute(\"data-\" + name, \"\");\n        if (cssString) {\n            tag.appendChild(document.createTextNode(cssString));\n        }\n        var head = document.head || document.getElementsByTagName(\"head\")[0];\n        if (relativeToTag) {\n            head.insertBefore(tag, relativeToTag);\n        } else {\n            head.appendChild(tag);\n        }\n        return tag;\n    };\n    _createClass(StyleSheet, [\n        {\n            key: \"length\",\n            get: function get() {\n                return this._rulesCount;\n            }\n        }\n    ]);\n    return StyleSheet;\n}();\nfunction invariant$1(condition, message) {\n    if (!condition) {\n        throw new Error(\"StyleSheet: \" + message + \".\");\n    }\n}\nfunction hash(str) {\n    var _$hash = 5381, i = str.length;\n    while(i){\n        _$hash = _$hash * 33 ^ str.charCodeAt(--i);\n    }\n    /* JavaScript does bitwise operations (like XOR, above) on 32-bit signed\n   * integers. Since we want the results to be always positive, convert the\n   * signed int to an unsigned by doing an unsigned bitshift. */ return _$hash >>> 0;\n}\nvar stringHash = hash;\nvar sanitize = function(rule) {\n    return rule.replace(/\\/style/gi, \"\\\\/style\");\n};\nvar cache = {};\n/**\n * computeId\n *\n * Compute and memoize a jsx id from a basedId and optionally props.\n */ function computeId(baseId, props) {\n    if (!props) {\n        return \"jsx-\" + baseId;\n    }\n    var propsToString = String(props);\n    var key = baseId + propsToString;\n    if (!cache[key]) {\n        cache[key] = \"jsx-\" + stringHash(baseId + \"-\" + propsToString);\n    }\n    return cache[key];\n}\n/**\n * computeSelector\n *\n * Compute and memoize dynamic selectors.\n */ function computeSelector(id, css) {\n    var selectoPlaceholderRegexp = /__jsx-style-dynamic-selector/g;\n    // Sanitize SSR-ed CSS.\n    // Client side code doesn't need to be sanitized since we use\n    // document.createTextNode (dev) and the CSSOM api sheet.insertRule (prod).\n    if (typeof window === \"undefined\") {\n        css = sanitize(css);\n    }\n    var idcss = id + css;\n    if (!cache[idcss]) {\n        cache[idcss] = css.replace(selectoPlaceholderRegexp, id);\n    }\n    return cache[idcss];\n}\nfunction mapRulesToStyle(cssRules, options) {\n    if (options === void 0) options = {};\n    return cssRules.map(function(args) {\n        var id = args[0];\n        var css = args[1];\n        return /*#__PURE__*/ React__default[\"default\"].createElement(\"style\", {\n            id: \"__\" + id,\n            // Avoid warnings upon render with a key\n            key: \"__\" + id,\n            nonce: options.nonce ? options.nonce : undefined,\n            dangerouslySetInnerHTML: {\n                __html: css\n            }\n        });\n    });\n}\nvar StyleSheetRegistry = /*#__PURE__*/ function() {\n    function StyleSheetRegistry(param) {\n        var ref = param === void 0 ? {} : param, _styleSheet = ref.styleSheet, styleSheet = _styleSheet === void 0 ? null : _styleSheet, _optimizeForSpeed = ref.optimizeForSpeed, optimizeForSpeed = _optimizeForSpeed === void 0 ? false : _optimizeForSpeed;\n        this._sheet = styleSheet || new StyleSheet({\n            name: \"styled-jsx\",\n            optimizeForSpeed: optimizeForSpeed\n        });\n        this._sheet.inject();\n        if (styleSheet && typeof optimizeForSpeed === \"boolean\") {\n            this._sheet.setOptimizeForSpeed(optimizeForSpeed);\n            this._optimizeForSpeed = this._sheet.isOptimizeForSpeed();\n        }\n        this._fromServer = undefined;\n        this._indices = {};\n        this._instancesCounts = {};\n    }\n    var _proto = StyleSheetRegistry.prototype;\n    _proto.add = function add(props) {\n        var _this = this;\n        if (undefined === this._optimizeForSpeed) {\n            this._optimizeForSpeed = Array.isArray(props.children);\n            this._sheet.setOptimizeForSpeed(this._optimizeForSpeed);\n            this._optimizeForSpeed = this._sheet.isOptimizeForSpeed();\n        }\n        if (typeof window !== \"undefined\" && !this._fromServer) {\n            this._fromServer = this.selectFromServer();\n            this._instancesCounts = Object.keys(this._fromServer).reduce(function(acc, tagName) {\n                acc[tagName] = 0;\n                return acc;\n            }, {});\n        }\n        var ref = this.getIdAndRules(props), styleId = ref.styleId, rules = ref.rules;\n        // Deduping: just increase the instances count.\n        if (styleId in this._instancesCounts) {\n            this._instancesCounts[styleId] += 1;\n            return;\n        }\n        var indices = rules.map(function(rule) {\n            return _this._sheet.insertRule(rule);\n        }) // Filter out invalid rules\n        .filter(function(index) {\n            return index !== -1;\n        });\n        this._indices[styleId] = indices;\n        this._instancesCounts[styleId] = 1;\n    };\n    _proto.remove = function remove(props) {\n        var _this = this;\n        var styleId = this.getIdAndRules(props).styleId;\n        invariant(styleId in this._instancesCounts, \"styleId: `\" + styleId + \"` not found\");\n        this._instancesCounts[styleId] -= 1;\n        if (this._instancesCounts[styleId] < 1) {\n            var tagFromServer = this._fromServer && this._fromServer[styleId];\n            if (tagFromServer) {\n                tagFromServer.parentNode.removeChild(tagFromServer);\n                delete this._fromServer[styleId];\n            } else {\n                this._indices[styleId].forEach(function(index) {\n                    return _this._sheet.deleteRule(index);\n                });\n                delete this._indices[styleId];\n            }\n            delete this._instancesCounts[styleId];\n        }\n    };\n    _proto.update = function update(props, nextProps) {\n        this.add(nextProps);\n        this.remove(props);\n    };\n    _proto.flush = function flush() {\n        this._sheet.flush();\n        this._sheet.inject();\n        this._fromServer = undefined;\n        this._indices = {};\n        this._instancesCounts = {};\n    };\n    _proto.cssRules = function cssRules() {\n        var _this = this;\n        var fromServer = this._fromServer ? Object.keys(this._fromServer).map(function(styleId) {\n            return [\n                styleId,\n                _this._fromServer[styleId]\n            ];\n        }) : [];\n        var cssRules = this._sheet.cssRules();\n        return fromServer.concat(Object.keys(this._indices).map(function(styleId) {\n            return [\n                styleId,\n                _this._indices[styleId].map(function(index) {\n                    return cssRules[index].cssText;\n                }).join(_this._optimizeForSpeed ? \"\" : \"\\n\")\n            ];\n        }) // filter out empty rules\n        .filter(function(rule) {\n            return Boolean(rule[1]);\n        }));\n    };\n    _proto.styles = function styles(options) {\n        return mapRulesToStyle(this.cssRules(), options);\n    };\n    _proto.getIdAndRules = function getIdAndRules(props) {\n        var css = props.children, dynamic = props.dynamic, id = props.id;\n        if (dynamic) {\n            var styleId = computeId(id, dynamic);\n            return {\n                styleId: styleId,\n                rules: Array.isArray(css) ? css.map(function(rule) {\n                    return computeSelector(styleId, rule);\n                }) : [\n                    computeSelector(styleId, css)\n                ]\n            };\n        }\n        return {\n            styleId: computeId(id),\n            rules: Array.isArray(css) ? css : [\n                css\n            ]\n        };\n    };\n    /**\n   * selectFromServer\n   *\n   * Collects style tags from the document with id __jsx-XXX\n   */ _proto.selectFromServer = function selectFromServer() {\n        var elements = Array.prototype.slice.call(document.querySelectorAll('[id^=\"__jsx-\"]'));\n        return elements.reduce(function(acc, element) {\n            var id = element.id.slice(2);\n            acc[id] = element;\n            return acc;\n        }, {});\n    };\n    return StyleSheetRegistry;\n}();\nfunction invariant(condition, message) {\n    if (!condition) {\n        throw new Error(\"StyleSheetRegistry: \" + message + \".\");\n    }\n}\nvar StyleSheetContext = /*#__PURE__*/ React.createContext(null);\nStyleSheetContext.displayName = \"StyleSheetContext\";\nfunction createStyleRegistry() {\n    return new StyleSheetRegistry();\n}\nfunction StyleRegistry(param) {\n    _s();\n    var configuredRegistry = param.registry, children = param.children;\n    var rootRegistry = React.useContext(StyleSheetContext);\n    var ref = React.useState({\n        \"StyleRegistry.useState[ref]\": function() {\n            return rootRegistry || configuredRegistry || createStyleRegistry();\n        }\n    }[\"StyleRegistry.useState[ref]\"]), registry = ref[0];\n    return /*#__PURE__*/ React__default[\"default\"].createElement(StyleSheetContext.Provider, {\n        value: registry\n    }, children);\n}\n_s(StyleRegistry, \"F6PIZFsaWgcE6rBNmd+Zkq3zRoY=\");\n_c1 = StyleRegistry;\nfunction useStyleRegistry() {\n    _s1();\n    return React.useContext(StyleSheetContext);\n}\n_s1(useStyleRegistry, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n// Opt-into the new `useInsertionEffect` API in React 18, fallback to `useLayoutEffect`.\n// https://github.com/reactwg/react-18/discussions/110\nvar useInsertionEffect = React__default[\"default\"].useInsertionEffect || React__default[\"default\"].useLayoutEffect;\nvar defaultRegistry = typeof window !== \"undefined\" ? createStyleRegistry() : undefined;\nfunction JSXStyle(props) {\n    _s2();\n    var registry = defaultRegistry ? defaultRegistry : useStyleRegistry();\n    // If `registry` does not exist, we do nothing here.\n    if (!registry) {\n        return null;\n    }\n    if (typeof window === \"undefined\") {\n        registry.add(props);\n        return null;\n    }\n    useInsertionEffect({\n        \"JSXStyle.useInsertionEffect\": function() {\n            registry.add(props);\n            return ({\n                \"JSXStyle.useInsertionEffect\": function() {\n                    registry.remove(props);\n                }\n            })[\"JSXStyle.useInsertionEffect\"];\n        // props.children can be string[], will be striped since id is identical\n        }\n    }[\"JSXStyle.useInsertionEffect\"], [\n        props.id,\n        String(props.dynamic)\n    ]);\n    return null;\n}\n_s2(JSXStyle, \"48Sqj1BUqkshsPdz6NEWXDn8pF4=\", false, function() {\n    return [\n        useStyleRegistry,\n        useInsertionEffect\n    ];\n});\n_c2 = JSXStyle;\nJSXStyle.dynamic = function(info) {\n    return info.map(function(tagInfo) {\n        var baseId = tagInfo[0];\n        var props = tagInfo[1];\n        return computeId(baseId, props);\n    }).join(\" \");\n};\nexports.StyleRegistry = StyleRegistry;\nexports.createStyleRegistry = createStyleRegistry;\nexports.style = JSXStyle;\nexports.useStyleRegistry = useStyleRegistry;\nvar _c, _c1, _c2;\n$RefreshReg$(_c, \"React__default\");\n$RefreshReg$(_c1, \"StyleRegistry\");\n$RefreshReg$(_c2, \"JSXStyle\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/styled-jsx/dist/index/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/styled-jsx/style.js":
/*!******************************************!*\
  !*** ./node_modules/styled-jsx/style.js ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\nmodule.exports = __webpack_require__(/*! ./dist/index */ \"(app-pages-browser)/./node_modules/styled-jsx/dist/index/index.js\").style;\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9zdHlsZWQtanN4L3N0eWxlLmpzIiwibWFwcGluZ3MiOiI7QUFBQUEsbUlBQThDIiwic291cmNlcyI6WyJXOlxcQ29kaW5nXFxwYWYtZWNvc3VydmV5XFxnaXRodWJcXHBhZi1lY29zdXJ2ZXlcXG5vZGVfbW9kdWxlc1xcc3R5bGVkLWpzeFxcc3R5bGUuanMiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Rpc3QvaW5kZXgnKS5zdHlsZVxuIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJyZXF1aXJlIiwic3R5bGUiXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/styled-jsx/style.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/app/interviews/interviewData.ts":
/*!*********************************************!*\
  !*** ./src/app/interviews/interviewData.ts ***!
  \*********************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   interviews: () => (/* binding */ interviews)\n/* harmony export */ });\nconst interviews = [\n    {\n        id: 'interview-1',\n        role: 'Interview 1',\n        tags: [\n            'business',\n            'sales',\n            'strategy',\n            'tools',\n            'management',\n            'coordination',\n            'resources',\n            'communication',\n            'research',\n            'processes',\n            'tracking',\n            'optimization',\n            'administration',\n            'enterprise',\n            'partnerships'\n        ],\n        content: \"// BD Strategy & Structure\\nKey Insights:\\n\\n1. Potential Role of Ranks in BD\\n- Ranks could be utilized to help agents structure and execute effective business development (BD) campaigns.\\n\\n2. Challenges in BD Funding\\n- Current BD funding mechanisms are ineffective and require restructuring to enhance impact.\\n\\n3. Guidance & Navigation for Agents\\n- A structured approach is needed to assist BD agents in navigating the ecosystem, identifying relevant products/services, and closing deals efficiently.\\n\\n4. BD Launchpad & Accelerator Concept\\n- A dedicated landing page could act as a BD launchpad/accelerator.\\n- It should provide essential information, project development status, and a shared BD resource hub.\\n- The page should include key sections containing all necessary elements for BD representatives to close deals effectively.\\n\\n5. Targeted Research Initiative\\n- A closed-source, low-key initiative could identify around five individuals to conduct further research.\\n- The goal is to extract fundamental BD statements and set up a voting process via Pol.is.\\n- Establishing a dedicated communication hub for collaboration.\\n\\n6. Recommended Tools & Workflow\\n- Adoption of a commonly used and active CRM system—Trello was suggested as a preferred option.\\n\\n7. Clear Deliverables & Team Composition\\n- Initial structure should involve two dedicated individuals:\\n  - One focusing on engineering-related BD.\\n  - One focusing on social engagement and outreach.\\n\\n8. Lead Organization & Compensation Model\\n- Exploring structured methods to organize BD leads effectively.\\n- Evaluating alternatives to retainer-based compensation models for BD contributors.\"\n    },\n    {\n        id: 'interview-2',\n        role: 'Interview 2',\n        tags: [\n            'technical',\n            'infrastructure',\n            'tools',\n            'development',\n            'treasury',\n            'finance',\n            'administration',\n            'legal',\n            'compliance',\n            'regulation',\n            'risk',\n            'governance',\n            'processes',\n            'optimization'\n        ],\n        content: \"// UX & Operational Challenges\\nKey Insights:\\n\\n1. UX Synchronization & Backlog Management\\n- A backlog was created to determine which UX aspects need to be synchronized across teams.\\n\\n2. Evolution of Braille & UX Bounty\\n- Braille originated from Parity's decentralization efforts and later evolved into the UX Bounty.\\n- The UX Bounty faced pushback within OpenGov.\\n\\n3. Challenges in Payment & Treasury Management\\n- Payment delays occur due to the involvement of too many multisig signers.\\n- Lack of a dedicated treasury management system, with funds primarily in DOT and requiring USDT refills.\\n\\n4. Structural & Legal Limitations\\n- No legal entity currently exists, making it difficult to sign contracts.\\n- A legal representative is needed to formalize agreements, but legal costs are high.\\n\\n5. Bounties as Departments\\n- The bounty system could be structured as departmental units.\\n- Bounty curators would act as department heads, overseeing operations and accountability.\\n\\n6. Funding & Sustainability Concerns\\n- No funds are available for full-time positions, making operations hard to sustain.\\n- An annual budget for bounty leads should be submitted and managed by the Polkadot Ambassadors Fellowship (PAF).\\n- Bounty curators would be responsible for signing contracts.\\n\\n7. Path to Professionalization\\n- Establishing clearer structures for accountability, invoicing, and administrative processes.\\n- Moving towards a more professionalized operational framework.\\n- Ensuring sufficient resources are allocated without hesitation.\"\n    },\n    {\n        id: 'interview-3',\n        role: 'Interview 3',\n        tags: [\n            'coordination',\n            'communication',\n            'governance',\n            'treasury',\n            'opengov',\n            'stakeholders',\n            'legal',\n            'compliance',\n            'regulation',\n            'risk',\n            'strategy',\n            'processes'\n        ],\n        content: '// Ecosystem Coordination & Governance\\nKey Insights:\\n\\n- Ecosystem facing coordination issues, lack of alignment on strategic objectives, and leadership gaps\\n- Need for streamlined tools, processes, and communication to improve efficiency and reduce redundancy\\n- Ambassador Fellowship could address key pain points by providing structure, resources, and external expertise\\n- Legal and regulatory considerations becoming increasingly important; need balanced approach to compliance\\n\\nEcosystem Coordination Challenges:\\n- Lack of centralized information sharing leading to repeated questions and inefficiencies\\n- Multiple overlapping initiatives (e.g. wallets, block explorers) without clear differentiation or purpose\\n- Difficulty mapping and tracking active ecosystem participants globally\\n\\nLegal and Regulatory Considerations:\\n- Growing importance of compliance as regulation increases\\n- Need for balanced approach - protective but not overly constraining\\n- Challenges providing guidance due to liability concerns\\n- Potential for legal-focused ambassadors to assist with jurisdictional expertise\\n\\nAmbassador Fellowship Opportunities:\\n- Provide structure and resources to improve ecosystem coordination\\n- Bring in external experts to deliver key messages and provide fresh perspectives\\n- Develop standardized speaking points and educational materials for consistent messaging\\n- Create badging/certification system to track skills and expertise\\n\\nGovernance and Leadership:\\n- Desire for more visible leadership and strategic direction\\n- Debate over formalized constitution vs. principles-based approach\\n- Need to balance decentralization with effective decision-making\\n\\nFunding and Sustainability:\\n- Challenges with short-term funding cycles through OpenGov\\n- Need for more sustainable funding models for long-term initiatives\\n- Balancing transparency requirements with confidentiality needs for sensitive work\\n\\nNext Steps:\\n- Produce report summarizing key takeaways and proposed actions\\n- Explore developing standardized ecosystem speaking points/messaging\\n- Consider creating \"job board\" to match skills with ecosystem needs\\n- Investigate options for more sustainable funding models\\n- Continue discussions on governance structure and leadership approach'\n    },\n    {\n        id: 'interview-4',\n        role: 'Interview 4',\n        tags: [\n            'community',\n            'onboarding',\n            'support',\n            'engagement',\n            'communication',\n            'coordination',\n            'recognition',\n            'resources',\n            'administration',\n            'processes'\n        ],\n        content: \"// Community Building & Bounty Management\\nKey Insights:\\n\\n1. Key Elements for a Strong Community\\n- A successful initiative should provide:\\n  - Purpose – Clear goals and direction.\\n  - Community – A sense of belonging and collaboration.\\n  - Recognition – Acknowledgment of contributions.\\n  - Incentives & Compensation – Fair rewards for work done.\\n\\n2. Challenges as a Bounty Curator\\n- Rebuilding trust has been difficult, as MB v1 damaged community confidence.\\n- Had to volunteer upfront before the system was properly set up.\\n- Often had to ignore uninformed community feedback, as many members show little interest in learning the full picture.\\n- Took on core marketing responsibilities due to lack of support from Distractive/W3F.\\n- Learned to be more cautious about which information gets publicly shared.\\n- Significant time spent on political alignment and engagement, which, while time-consuming, remains crucial.\\n\\n3. Structural & Organizational Improvements\\n- Instead of hiring full-time employees, define clear tasks and responsibilities.\\n- The initiative is slowly expanding, with a focus on steady, sustainable growth.\\n- Developing an HR department to create a pool of competent individuals for future needs.\"\n    },\n    {\n        id: 'interview-5',\n        role: 'Interview 5',\n        tags: [\n            'business',\n            'sales',\n            'strategy',\n            'tools',\n            'management',\n            'coordination',\n            'resources',\n            'communication',\n            'research',\n            'processes',\n            'tracking',\n            'optimization',\n            'enterprise',\n            'partnerships'\n        ],\n        content: \"// W3F BD Coordination & Tools\\nKey Insights:\\n\\n1. Web3 Foundation (W3F) & Business Development (BD)\\n- W3F plays a coordination role in BD but faces internal challenges.\\n- Aims to close deals efficiently, though success varies by project.\\n- Uses GitHub projects for tracking, ideally to be community-managed in the future.\\n- Engages with signed BD teams (Poke, Magenta, Velocity).\\n- Communication channels exist for BD teams and agents, but data-sharing needs refinement.\\n\\n2. Challenges & Potential Solutions in BD Coordination\\n- Legal and contract management are handled as side tasks, making processes inefficient.\\n- CRM tools are critical, but past shared CRM with Parity was problematic.\\n- Need to define clear data structures for BD tools, CRM, and client information.\\n- Visibility on BD assignments is lacking:\\n  - A solution is needed to track assigned BD experts to prevent duplication of outreach efforts.\\n\\n3. Internal Structural & Operational Issues\\n- Funnel system for PBA graduates is ineffective in BD.\\n- Internal W3F obstacles prevent efficient coordination of BD efforts.\\n- Lead tracking should be streamlined via a CRM system, allowing desks to manage leads from events.\\n- PAF CRM could be opened to W3F to improve coordination.\\n- W3F is shifting from a broad European focus to a more targeted EU approach.\\n\\n4. Strengthening BD Communication & Collaboration\\n- More structured communication needed between W3F and BD teams.\\n- BD teams should be organized into domain-specific groups with monthly calls.\\n- Maintain a larger coordination group including major teams (DF recipients, etc.).\\n\\n5. Tools & Resources for BD Optimization\\n- CRM tools and a shared knowledge base (CMS) for BD are essential.\\n- W3F has initiated a public BD resource center:\\n  - GitHub Resource Center: https://github.com/Polkadot-BD/Resource-Center-Public\\n- PAF to host monthly BD calls for alignment.\\n- Establish an official Polkadot BD Telegram for streamlined communication.\\n- Ensure database compatibility between W3F & PAF to unify BD operations.\"\n    },\n    {\n        id: 'interview-6',\n        role: 'Interview 6',\n        tags: [\n            'talent',\n            'training',\n            'development',\n            'skills',\n            'career',\n            'recognition',\n            'strategy',\n            'legal',\n            'compliance',\n            'regulation',\n            'risk',\n            'governance',\n            'resources',\n            'allocation',\n            'planning'\n        ],\n        content: \"// Recruitment & Strategic Gaps\\nKey Insights:\\n\\n1. Challenges in Recruitment & Decision-Making\\n- Lack of aggressive recruitment strategies to bring in fresh talent.\\n- A high-authority decision-making entity is needed for quicker execution.\\n- Onboarding and training processes should be defined for specific roles, potentially via an OpenGov Academy in collaboration with PBA.\\n\\n2. Structural & Strategic Gaps\\n- No unified strategy, leading different departments to define their own approaches.\\n- Need for better branding and marketing to improve ecosystem visibility.\\n- Certain aspects should be centralized without diminishing community control to enhance efficiency.\\n- Implementing decisions in a decentralized system remains challenging.\\n\\n3. Legal & Financial Hurdles\\n- A centralized legal entity is required to sign contracts, reducing friction.\\n- PCF charges are excessively high, making it difficult to operate efficiently.\\n- Convincing W3F and Parity to support deals is challenging, often delaying progress.\\n\\n4. Need for Better Coordination & Alignment\\n- Many departments lack alignment, causing inefficiencies.\\n- W3F needs to improve communication across the ecosystem.\\n- A strong intellectual foundation (e.g., a Polkadot constitution) could build alignment and cohesion.\\n\\n5. Strengthening Talent Pipeline & Resource Allocation\\n- Find and attract fresh talent, particularly young, energetic contributors.\\n- High-ranking BD agents should be able to submit RFPs, ensuring that ecosystem gaps and resource needs are effectively addressed.\\n- Consider establishing an Accounting Fellowship to improve financial oversight and resource management.\"\n    },\n    {\n        id: 'interview-7',\n        role: 'Interview 7',\n        tags: [\n            'business',\n            'sales',\n            'strategy',\n            'growth',\n            'enterprise',\n            'partnerships',\n            'marketing',\n            'coordination',\n            'resources',\n            'optimization',\n            'administration'\n        ],\n        content: \"// BD Approach & Ecosystem Challenges\\nKey Insights:\\n\\n1. Business Development (BD) Approach\\n- Focuses on selling solutions, rather than directly promoting blockchain or Polkadot.\\n- Engages with 10-20 high-potential leads, including large corporations and governments.\\n- Operates with flexibility and discretion, avoiding the need for public disclosure.\\n- Funded by Web3 Foundation, enabling key account management without direct profit pressure.\\n\\n2. Ecosystem Inefficiencies & Challenges\\n- Lack of awareness around various BD initiatives (e.g., Web3 Deal Desk).\\n- GDPR restrictions complicate the sharing of contact information.\\n- Retention issues for BD talent due to inconsistent funding and career paths.\\n- No unified strategy or coordination mechanism for ecosystem-wide BD efforts.\\n\\n3. Potential Solutions & Improvements\\n- Implement a tiered retainer system for BD agents (starting at ~1000 EUR/month + travel).\\n- Utilize the PD Fellowship for accountability and improved communication with W3F.\\n- Develop sustainable funding models that reduce reliance on OpenGov.\\n\\n4. Natali's Team & Strategic Initiatives\\n- A treasury-funded team is working on marketing strategies and materials.\\n- Aims to be ready before the Polkadot Hub launch.\\n- Could empower lower-ranked BD agents by providing standardized language and approaches.\\n\\n5. Next Steps\\n- Engage with W3F to strengthen coordination between W3F and community BD efforts.\\n- Explore implementing a tiered retainer system for BD agents through the fellowship.\\n- Evaluate Phragm\\xe9n as a funding mechanism for BD roles and initiatives.\"\n    },\n    {\n        id: 'interview-8',\n        role: 'Interview 8',\n        tags: [\n            'community',\n            'engagement',\n            'coordination',\n            'resources',\n            'allocation',\n            'planning',\n            'optimization',\n            'tracking',\n            'efficiency',\n            'governance',\n            'processes'\n        ],\n        content: \"// Fellowship Structure & Ecosystem Challenges\\nKey Takeaways:\\n- The fellowship seeks to establish a social layer and reputation system for Polkadot agents, enhancing coordination and efficiency.\\n- Major challenges include low user adoption, a shortage of high-quality agents, and underutilized resources (e.g., bounties).\\n- The immediate focus is on activating lower-rank agents through meetups and raising awareness of available tools and opportunities.\\n- There is a strong need for better accountability, supervision, and resource allocation for high-performing agents and initiatives.\\n\\nKey Topics:\\n\\n1. Fellowship Structure & Purpose\\n- Ranking system for agents based on reputation rather than salary.\\n- Designed to improve coordination, anticipate needs, and create a structured social network.\\n- Introduction of a new funding model (Phragm\\xe9n) for monthly agent budgets (5-10K DOT).\\n- Goal to unify information sources and databases across the Polkadot ecosystem.\\n\\n2. Ecosystem Challenges\\n- Lack of adoption and engagement from the broader community.\\n- Too few high-quality agents available to meet ecosystem needs.\\n- Underutilization of existing resources and bounties.\\n- Need for better coordination and resource allocation.\"\n    },\n    {\n        id: 'interview-9',\n        role: 'Interview 9',\n        tags: [\n            'community',\n            'engagement',\n            'coordination',\n            'resources',\n            'allocation',\n            'planning',\n            'optimization',\n            'tracking',\n            'efficiency',\n            'support',\n            'administration'\n        ],\n        content: \"// Meetups Bounty & PAF Integration\\nKey Takeaways:\\n- The Meetups Bounty has a strong team and sufficient funding but lacks engagement from ambassadors.\\n- Promotion efforts are insufficient—PAF could assist in increasing visibility.\\n- Need to build confidence among people interested in engaging with the Meetups Bounty.\\n- A central repository for all bounties is needed to improve accessibility.\\n- Ambassadors should focus on educating the community about available bounties.\\n- Regular workshops are necessary to address knowledge gaps among ambassadors.\\n- Leemo is planning ambassador calls to enhance knowledge-sharing.\\n- A dedicated liaison from the Helpdesk (HD) should maintain contact with bounty programs.\\n- HD should not take over accountability and QA roles but provide general guidance and support.\\n- HD should be staffed with one or two full-time/part-time members.\\n\\nImproving the Meetups Bounty & Application Process:\\n- Any improvements must not disrupt existing processes.\\n- Need for better tooling and an optimized application process.\\n- Standards for bounty applications should be clearly defined and communicated.\\n- Consideration of a separate group for accountability, QA, and auditing.\\n\\nPAF's Role & Impact:\\n- PAF is proving effective in building synergies and harmonizing ecosystem efforts.\\n- Provides a hub for agents and ambassadors to connect, such as through Discord and meetings.\\n\\nTipping & Reward Mechanisms:\\n- PIF (Polkadot Incentives Framework) will introduce tipping to reward contributions.\\n- Bounties should co-design tipping criteria to ensure they align with existing reward mechanisms.\\n- Bounties → PAF → Tips:\\n  - Bounties can submit tips through PAF to reward outstanding contributions.\\n  - Higher-ranked contributors can receive privileged rewards.\\n  - Requirement: Bounties must adhere to PAF standards.\\n- Establishing PAF Bounty Standards would ensure consistency in reward distribution.\\n\\nPAF & Parachains:\\n- PAF can provide valuable services to parachains and receive reciprocal value in return.\\n- PAF Tips & PIF rewards could be distributed in multiple tokens to enhance ecosystem-wide incentives.\"\n    },\n    {\n        id: 'interview-10',\n        role: 'Interview 10',\n        tags: [\n            'support',\n            'community',\n            'engagement',\n            'coordination',\n            'tools',\n            'infrastructure',\n            'development',\n            'documentation',\n            'processes',\n            'optimization',\n            'efficiency'\n        ],\n        content: '// Helpdesk & Support Systems\\nKey Takeaways:\\n- Support in the ecosystem is highly fragmented, making it difficult for users to navigate.\\n- A unified helpdesk system is needed, where members have access to a contact sheet to direct requests appropriately.\\n- Helpdesk should handle most requests directly, but for complex issues, it should have structured streams to forward them to the right experts and channels.\\n- Moderators self-evaluate on a monthly basis to assess their effectiveness.\\n- The Moderators Bounty does not manage moderators directly but focuses on bounty administration.\\n- Budgets are used carefully, prioritizing real work over unnecessary expenses (e.g., accounting).\\n- Treasury funds are spent conservatively, often leading to underbudgeting due to high accountability standards.\\n\\nModeration & Knowledge Management:\\n- A moderator knowledge base is maintained through a private mod-resources channel containing the most relevant links.\\n- An AI bot exists on Discord, but it is not widely used.\\n- Helpdesks should incorporate AI tooling (AI Agents) to improve efficiency.\\n- Lack of awareness remains a major issue regarding available bounties.\\n- The Agent Chat has proven valuable in connecting agents and enabling discussions with W3F and Parity.\\n\\nHelpdesk & Bounties – UX & Sustainability:\\n- A unified frontend for Helpdesks and Bounties is needed to provide a seamless user experience, allowing users to navigate between services without realizing they are separate.\\n- Sustainability for moderators remains a challenge as their work depends heavily on the Marketing Bounty.\\n- A dedicated annual budget from PAF/PIF should be allocated to support system-critical services, such as bounties and agents.\\n- PIF funding slots should be assessed and approved/rejected by high-ranking ambassadors.\\n- Potential approach: Start as a \"Wish-for-Change\" proposal, then transition into a referendum for official approval.'\n    },\n    {\n        id: 'interview-11',\n        role: 'Interview 11',\n        tags: [\n            'business',\n            'sales',\n            'strategy',\n            'growth',\n            'market',\n            'research',\n            'competition',\n            'partnerships',\n            'education',\n            'coordination',\n            'optimization'\n        ],\n        content: \"// Business Development Strategy & Market Segmentation\\nKey Takeaways:\\n- Emerging opportunities identified for a diverse set of clients, but marketing efforts often fail to effectively target them.\\n- Need to support Web3 companies in improving client outreach and effectiveness.\\n- Defining meaningful metrics & KPIs for long-term investment impact remains a challenge.\\n\\nStrategic BD Efforts:\\n- Segment refinement: Narrowed down from 34 market segments to 5 leading ones.\\n- Developing key strategies for these 5 priority segments, including:\\n  - Creating strong narratives tailored to geographical regions.\\n  - Securing follow-up funding from Web3 Foundation (W3F).\\n  - Developing positioning strategies to guide go-to-market approaches.\\n  - Formulating a broader ecosystem strategy, followed by execution plans.\\n\\nChallenges & Coordination Gaps:\\n- W3F funds numerous BD efforts, but the process appears chaotic.\\n- BD enabler model: Focus is on supporting BD initiatives rather than direct BD execution.\\n- Lack of effective community engagement, leading to missed opportunities for outreach.\\n- Coordination remains the biggest gap, limiting efficiency and impact.\\n\\nNext Steps & Recommendations:\\n- Strengthen coordination mechanisms within BD efforts.\\n- Establish clear training programs to develop skilled BD experts.\\n- Improve alignment between BD initiatives and community engagement efforts.\"\n    },\n    {\n        id: 'interview-12',\n        role: 'Interview 12',\n        tags: [\n            'business',\n            'sales',\n            'strategy',\n            'enterprise',\n            'partnerships',\n            'tools',\n            'infrastructure',\n            'development',\n            'coordination',\n            'optimization',\n            'resources',\n            'allocation'\n        ],\n        content: '// BD Enablement & Enterprise Strategy\\nKey Takeaways:\\n- Biggest unknown and untapped opportunities should be prioritized for BD efforts.\\n- Few true BD experts exist – need to level up the quality of BD professionals.\\n- A structured process is required to transition newcomers into BD experts.\\n- Funneling enterprises towards building on Polkadot is crucial, but no clear path exists.\\n- Need to establish a dedicated enterprise sales team.\\n- W3F & Parity need to step up and take a more active role.\\n- Standardized SDR (Sales Development Representative) processes must be implemented.\\n\\nReflection on Dealdesk:\\n- Treasury is often not the right place for deals – instead, monthly CF (Community Fund) meetings should address and share opportunities with W3F.\\n- Dealdesk helped structure deals but does not execute them directly.\\n- An annual budget for Dealdesk would improve its effectiveness.\\n- Dealdesk should operate as an independent tool within the BD Helpdesk.\\n- Better alignment is needed to plug opportunities into the right implementors.\\n- Strong coordination with the overall ecosystem strategy is required.\\n\\nRole of PAF in BD Enablement:\\n- PAF should provide the space and tools necessary for BD success.\\n- A clear definition of \"Polkadot BD\" is needed to align efforts.\\n- Better coordination & communication:\\n  - PAF should create both sync and async spaces for BD Agents to collaborate.\\n- Unified content strategy:\\n  - The PAF BD Helpdesk should offer domain-specific guides and resources to help businesses and builders onboard efficiently.\\n- Onboarding & Database Management:\\n  - PAF should maintain a centralized database for BD efforts.\\n  - PAF should develop ideas and strategic direction (e.g., BD Fellowship), socialize them, and align people and projects.\\n- Rewards & Incentives:\\n  - A system to define BD Agent proof points should be established.\\n  - BD Agents often face challenges in sharing prospects, as businesses may prefer to keep information confidential.\\n\\nNext Steps:\\n- Define clear pathways for newcomers to transition into BD experts.\\n- Improve communication and coordination between BD efforts, ecosystem strategies, and funding mechanisms.\\n- Develop a robust enterprise sales approach and engage key ecosystem entities (W3F, Parity).\\n- Standardize onboarding materials and BD enablement tools within PAF.'\n    },\n    {\n        id: 'interview-13',\n        role: 'Interview 13',\n        tags: [\n            'business',\n            'sales',\n            'strategy',\n            'growth',\n            'market',\n            'research',\n            'competition',\n            'partnerships',\n            'coordination',\n            'optimization',\n            'resources',\n            'allocation'\n        ],\n        content: '// BD Evolution & Structural Challenges\\nKey Takeaways:\\n- Products must drive sustainability, focusing on translating ecosystem problems into practical solutions.\\n- Money velocity within Polkadot is too slow, leading to liquidity challenges.\\n- The shift of all assets to AssetHub changed BD priorities and required a strategic pivot.\\n\\nPain Points in BD on Polkadot:\\n- The nature of BD on Polkadot has changed significantly and is very different from traditional BD models.\\n- Initial BD efforts (from Parity) followed a traditional, top-down approach, but:\\n  - Polkadot lacked a clear value proposition and struggled to compete with other ecosystems.\\n- Transitioning to decentralized BD has been challenging, with key issues including:\\n  - Lack of coordination:\\n    - Often, different BD agents/entities approach the same projects, leading to inefficiencies.\\n  - Risk of losing legitimacy:\\n    - Different \"leaders\" present conflicting narratives, causing confusion.\\n    - No standardized messaging or presentation formats.\\n  - Knowledge-sharing gaps:\\n    - BD calls hosted by W3F help, but broader alignment is still lacking.\\n  - No clear direction or priorities:\\n    - Different \"north stars\" make cohesive movement difficult.\\n    - Consensus-building remains a major challenge.\\n  - Lack of organization, structure, and leadership:\\n    - BD efforts lack a centralized framework, making execution inconsistent.\\n- BD needs more flexibility, but decision-making pathways are unclear.\\n\\nSuggested Improvements:\\n- Standardize BD narratives and messaging to prevent inconsistencies.\\n- Strengthen knowledge-sharing mechanisms (e.g., structured documentation, BD resource hub).\\n- Improve coordination among BD agents to avoid redundant efforts.\\n- Establish clear priorities and direction to align BD efforts with ecosystem needs.\\n- Define a decision-making structure to improve efficiency while retaining flexibility.'\n    },\n    {\n        id: 'interview-14',\n        role: 'Interview 14',\n        tags: [\n            'support',\n            'community',\n            'engagement',\n            'coordination',\n            'tools',\n            'infrastructure',\n            'development',\n            'documentation',\n            'processes',\n            'optimization',\n            'efficiency',\n            'resources',\n            'allocation'\n        ],\n        content: \"// HelpDesk Structure & Ecosystem Communication\\nKey Takeaways:\\n\\nTarget Audience for HelpDesks:\\nHelpDesks should primarily serve:\\n1. Ecosystem newcomers – Providing guidance, onboarding, and resources.\\n2. Ecosystem agents and bodies – Supporting bounties, individual agents, and other ecosystem participants.\\n\\nGuiding Principles:\\n- Reflect existing categories and structures rather than creating new ones.\\n- Align with bounty networks and existing classifications for better efficiency and accessibility.\\n\\nProposed HelpDesk Categories:\\n1. Events HelpDesk – Covering Roots, Meetups, and Event Bounties.\\n2. Tech HelpDesk – Supporting Tech Support, Open Source, UX, and related areas.\\n\\nResource Management & Synchronization:\\n- Ensure relevant efforts are well communicated across ecosystem participants.\\n- Introduce reporting standards to improve transparency and accountability:\\n  - Funding tracking > Accounting system for bounties, fellowships, and helpdesks.\\n  - Inspired by OpenGov Watch proposal (where OpenGov enforces bounty standards, PAF could act as a proposer).\\n- Priority Action:\\n  - HelpDesks should ensure basic synchronization on accountability, including:\\n    - Title of initiative, amount of funding, spending date, and specified currency.\\n  - This will greatly improve ecosystem treasury reporting.\\n\\nBuilding a Strong Communication Network:\\n- Bounties often lack awareness of activities in other bounties.\\n- HelpDesks should function as communication hubs, similar to a mycelium network, ensuring that information and resources reach the right people at the right time.\\n- Requirements:\\n  - Datasets, knowledge bases, and platforms to provide easy access to relevant ecosystem information.\\n  - Problem detection:\\n    - Identify recurring questions and pain points.\\n    - Develop structured responses and translate them into actionable solutions.\\n\\nTooling & Architecture:\\nTwo possible approaches:\\n1. Unified Tool – All bodies adopt a common platform.\\n2. Unified Database, Open Tools – Different teams use different tools, but standardized data is collected into a shared database.\\n\\nAdditional Functionality:\\n- Match people with roles:\\n  - HelpDesks assist bounties in finding team members and connect proposers with relevant opportunities.\\n\\nNext Steps:\\n1. Start from a social perspective – Engage with bounties and agents to understand their real needs.\\n2. Facilitate better coordination with bounties through structured meetings and communication improvements.\\n3. Bring key people into the discussion to define the next steps collaboratively.\"\n    },\n    {\n        id: 'interview-15',\n        role: 'Interview 15',\n        tags: [\n            'tools',\n            'infrastructure',\n            'communication',\n            'integration',\n            'analytics',\n            'development',\n            'support',\n            'community',\n            'engagement',\n            'coordination',\n            'resources',\n            'allocation',\n            'optimization'\n        ],\n        content: '// Platform Strategy & BD HelpDesk Structure\\nKey Takeaways:\\n\\nGeneral Considerations:\\n- GitHub is not suitable for everyone – Many ambassadors are non-developers.\\n- Platform choice should not be overly technical – Needs to be accessible to all ecosystem participants.\\n- Backup & Data Management:\\n  - Platform should support file & data storage in the background.\\n  - Ambassadors shouldn\\'t be required to interact with it directly unless needed.\\n- Notion as an interim solution:\\n  - User-friendly, widely used by startups and non-technical projects.\\n  - Closed-source but has an API for integration.\\n- Long-term vision: Own platform:\\n  - As PAF evolves, custom tooling may become necessary.\\n  - Would require PAF capacity for maintenance & administration.\\n  - Needs clear guidelines, documentation, and role assignments.\\n\\nBD HelpDesk Objectives & Structure:\\n\\nCore Functions:\\n- Centralized navigation hub:\\n  - Easily browse products, projects, services, agents & ambassadors.\\n- Provide tailored BD resources:\\n  - Domain-specific content, pitch decks, guides, contacts, showcases.\\n- Standardized communication across HelpDesks:\\n  - BD HelpDesk should set the standard for how HelpDesks engage with inquiries.\\n- Document & showcase impact:\\n  - Track successful projects & long-term impact.\\n- Define success metrics:\\n  - How to measure short/mid/long-term HelpDesk effectiveness?\\n  - What defines a successful vs. unsuccessful HelpDesk?\\n\\nExpertise & Reputation System:\\n- HelpDesk staff = Polkadot navigators, not necessarily domain experts.\\n- Expertise must be earned, not self-proclaimed.\\n- \"Expert\" role requires high accountability:\\n  - Higher-ranked members review and approve/reject expert claims.\\n  - Expert badges to indicate credibility.\\n- Prevent biases:\\n  - Need clear criteria to avoid desk members shilling their own projects.\\n  - HelpDesks should be neutral and focus on guidance, not promotion.\\n\\nFunding & Incentives:\\n- Funding is unclear & fragmented:\\n  - BD efforts lack alignment & coordination.\\n  - Needs dedicated budget to support BD Agents.\\n- Incentive models:\\n  - Financial incentives (budgets, payments).\\n  - Social incentives (rank, reputation, privileges).\\n- Rank-based resource allocation:\\n  - Higher ranks = More resources.\\n  - Incentives for engagement – encourage members to climb the ranks.\\n\\nBD HelpDesk & PAF Integration:\\n- Should BD Bounty be rebuilt or moved to PAF BD HelpDesk?\\n- Unclear leadership in BD structure & operations:\\n  - Can PAF fill this void?\\n- Matching opportunities across ranks:\\n  - Mentorship system from higher to lower ranks.\\n  - Connecting low-rank opportunities to experienced members.'\n    },\n    {\n        id: 'interview-16',\n        role: 'Interview 16',\n        tags: [\n            'community',\n            'engagement',\n            'coordination',\n            'communication',\n            'support',\n            'resources',\n            'allocation',\n            'optimization',\n            'efficiency'\n        ],\n        content: \"// Ecosystem Challenges & Communication\\nKey Takeaways:\\n\\nFriction within Entities & Individuals:\\n- Social drama detracts from productive work.\\n- Developers' perspective: Drama is a major distraction, and developers don't want drama.\\n\\nParachain Issues:\\n- Many parachains are not functional, and are not providing the expected value.\\n- Parachain economy did not evolve as anticipated.\\n\\nProposed Solutions:\\n\\nImprove Communication & Accessibility:\\n- Create a newsletter to keep more introverted stakeholders informed.\\n  - Not everyone is on X/Twitter, so this will ensure information reaches all stakeholders.\\n  - Increase accessibility of information across the ecosystem.\"\n    },\n    {\n        id: 'interview-17',\n        role: 'Interview 17',\n        tags: [\n            'tools',\n            'infrastructure',\n            'development',\n            'documentation',\n            'processes',\n            'standards',\n            'quality',\n            'metrics',\n            'governance',\n            'resources',\n            'allocation',\n            'optimization',\n            'tracking',\n            'efficiency'\n        ],\n        content: \"// Tools, Data Management & Best Practices\\nKey Takeaways:\\n\\nTeam Management & Reporting:\\n- Need tools to effectively manage teams, track requests, and generate reports.\\n- Events Bounty using Monday.com:\\n  - Includes CRM and is easy to use for non-developers.\\n  - Facilitates team management (roles/permissions).\\n  - Provides API access.\\n  - Check if this tool can be adapted for broader use.\\n\\nData Management & Knowledge Base:\\n\\nUnifying Data & Standardization:\\n- Aim for standardized data/metadata rather than standardizing tools.\\n- Different HelpDesks should be able to use their preferred tools (e.g., Notion, Monday.com, GitHub) while feeding data into a central knowledge base/source of truth.\\n\\nLead Management:\\n\\nLead Generation Challenges:\\n- Hard to measure real success in lead generation.\\n- Numbers from live events and general event metrics are often inflated.\\n- Need to improve lead tracking and ensure structured processes for funneling and maintaining leads.\\n\\nOwnership & Data Distribution:\\n\\nOwnership Management Challenges:\\n- Distractive holds tight ownership of important data sets and narratives.\\n  - Determine how to distribute ownership effectively, especially for PAF assets requiring administrative rights.\\n\\nBest Practices & Risk Identification:\\n\\nIdentifying Best Practices & Risks:\\n- Develop best practices from HelpDesks and wrap them into general guidelines for the ecosystem.\\n- Enable the effective identification of risks, such as double spending across bounties.\\n\\nTransforming Signals into Action:\\n\\nActionable Knowledge:\\n- Need a process to transform signals into knowledge and eventually into action.\\n- If bounties identify risks, PAF should act as a voice to inform the public about identified risks.\"\n    }\n];\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/interviews/interviewData.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/app/interviews/page.tsx":
/*!*************************************!*\
  !*** ./src/app/interviews/page.tsx ***!
  \*************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ InterviewsPage)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var styled_jsx_style__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! styled-jsx/style */ \"(app-pages-browser)/./node_modules/styled-jsx/style.js\");\n/* harmony import */ var styled_jsx_style__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(styled_jsx_style__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _interviewData__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./interviewData */ \"(app-pages-browser)/./src/app/interviews/interviewData.ts\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\nconst InterviewCard = (param)=>{\n    let { interview, onClick } = param;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"bg-[#111111] border border-[#333333] rounded-2xl p-6 hover:border-[#FF2670] transition-all duration-300 cursor-pointer group\",\n        onClick: onClick,\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"mb-4 flex items-start justify-between\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"flex items-center gap-3\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                            className: \"w-8 h-8 rounded-full bg-[#FF2670] flex items-center justify-center text-black font-bold text-sm\",\n                            children: interview.id.split('-')[1]\n                        }, void 0, false, {\n                            fileName: \"W:\\\\Coding\\\\paf-ecosurvey\\\\github\\\\paf-ecosurvey\\\\src\\\\app\\\\interviews\\\\page.tsx\",\n                            lineNumber: 26,\n                            columnNumber: 9\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                            className: \"text-[#FF2670] text-lg font-medium\",\n                            children: interview.role\n                        }, void 0, false, {\n                            fileName: \"W:\\\\Coding\\\\paf-ecosurvey\\\\github\\\\paf-ecosurvey\\\\src\\\\app\\\\interviews\\\\page.tsx\",\n                            lineNumber: 29,\n                            columnNumber: 9\n                        }, undefined)\n                    ]\n                }, void 0, true, {\n                    fileName: \"W:\\\\Coding\\\\paf-ecosurvey\\\\github\\\\paf-ecosurvey\\\\src\\\\app\\\\interviews\\\\page.tsx\",\n                    lineNumber: 25,\n                    columnNumber: 7\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"W:\\\\Coding\\\\paf-ecosurvey\\\\github\\\\paf-ecosurvey\\\\src\\\\app\\\\interviews\\\\page.tsx\",\n                lineNumber: 24,\n                columnNumber: 5\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                className: \"text-white/80 line-clamp-3 mb-4\",\n                children: interview.content\n            }, void 0, false, {\n                fileName: \"W:\\\\Coding\\\\paf-ecosurvey\\\\github\\\\paf-ecosurvey\\\\src\\\\app\\\\interviews\\\\page.tsx\",\n                lineNumber: 32,\n                columnNumber: 5\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"flex flex-wrap gap-2\",\n                children: interview.tags.map((tag, index)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                        className: \"text-xs px-2 py-1 rounded-full border border-white/10 bg-white/5 text-gray-400 group-hover:bg-[#FF2670]/20 group-hover:text-[#FF2670] group-hover:border-[#FF2670]/20 transition-all duration-300\",\n                        children: [\n                            \"#\",\n                            tag\n                        ]\n                    }, index, true, {\n                        fileName: \"W:\\\\Coding\\\\paf-ecosurvey\\\\github\\\\paf-ecosurvey\\\\src\\\\app\\\\interviews\\\\page.tsx\",\n                        lineNumber: 35,\n                        columnNumber: 9\n                    }, undefined))\n            }, void 0, false, {\n                fileName: \"W:\\\\Coding\\\\paf-ecosurvey\\\\github\\\\paf-ecosurvey\\\\src\\\\app\\\\interviews\\\\page.tsx\",\n                lineNumber: 33,\n                columnNumber: 5\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"W:\\\\Coding\\\\paf-ecosurvey\\\\github\\\\paf-ecosurvey\\\\src\\\\app\\\\interviews\\\\page.tsx\",\n        lineNumber: 20,\n        columnNumber: 3\n    }, undefined);\n};\n_c = InterviewCard;\nconst InterviewModal = (param)=>{\n    let { interview, onClose } = param;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"jsx-396ec6af33c136ec\" + \" \" + \"bg-[#111111] rounded-2xl p-8 max-w-4xl w-full max-h-[90vh] overflow-y-auto relative custom-scrollbar\",\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((styled_jsx_style__WEBPACK_IMPORTED_MODULE_1___default()), {\n                    id: \"396ec6af33c136ec\",\n                    children: \".custom-scrollbar::-webkit-scrollbar{width:10px;height:10px}.custom-scrollbar::-webkit-scrollbar-track{background:#000;-webkit-border-radius:5px;-moz-border-radius:5px;border-radius:5px}.custom-scrollbar::-webkit-scrollbar-thumb{background:#FF2670;border:2px solid#000;-webkit-border-radius:5px;-moz-border-radius:5px;border-radius:5px}.custom-scrollbar::-webkit-scrollbar-thumb:hover{background:#fff}.custom-scrollbar{scrollbar-width:thin;scrollbar-color:#FF2670#000}\"\n                }, void 0, false, void 0, undefined),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                    onClick: onClose,\n                    className: \"jsx-396ec6af33c136ec\" + \" \" + \"absolute top-4 right-4 text-white/60 hover:text-white transition-colors\",\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                        fill: \"none\",\n                        stroke: \"currentColor\",\n                        viewBox: \"0 0 24 24\",\n                        className: \"jsx-396ec6af33c136ec\" + \" \" + \"w-6 h-6\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            strokeLinecap: \"round\",\n                            strokeLinejoin: \"round\",\n                            strokeWidth: 2,\n                            d: \"M6 18L18 6M6 6l12 12\",\n                            className: \"jsx-396ec6af33c136ec\"\n                        }, void 0, false, {\n                            fileName: \"W:\\\\Coding\\\\paf-ecosurvey\\\\github\\\\paf-ecosurvey\\\\src\\\\app\\\\interviews\\\\page.tsx\",\n                            lineNumber: 81,\n                            columnNumber: 11\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"W:\\\\Coding\\\\paf-ecosurvey\\\\github\\\\paf-ecosurvey\\\\src\\\\app\\\\interviews\\\\page.tsx\",\n                        lineNumber: 80,\n                        columnNumber: 9\n                    }, undefined)\n                }, void 0, false, {\n                    fileName: \"W:\\\\Coding\\\\paf-ecosurvey\\\\github\\\\paf-ecosurvey\\\\src\\\\app\\\\interviews\\\\page.tsx\",\n                    lineNumber: 76,\n                    columnNumber: 7\n                }, undefined),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"jsx-396ec6af33c136ec\" + \" \" + \"flex items-center gap-3 mb-6\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                            className: \"jsx-396ec6af33c136ec\" + \" \" + \"w-10 h-10 rounded-full bg-[#FF2670] flex items-center justify-center text-black font-bold text-lg\",\n                            children: interview.id.split('-')[1]\n                        }, void 0, false, {\n                            fileName: \"W:\\\\Coding\\\\paf-ecosurvey\\\\github\\\\paf-ecosurvey\\\\src\\\\app\\\\interviews\\\\page.tsx\",\n                            lineNumber: 86,\n                            columnNumber: 9\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                            className: \"jsx-396ec6af33c136ec\" + \" \" + \"text-2xl font-bold text-[#FF2670]\",\n                            children: interview.role\n                        }, void 0, false, {\n                            fileName: \"W:\\\\Coding\\\\paf-ecosurvey\\\\github\\\\paf-ecosurvey\\\\src\\\\app\\\\interviews\\\\page.tsx\",\n                            lineNumber: 89,\n                            columnNumber: 9\n                        }, undefined)\n                    ]\n                }, void 0, true, {\n                    fileName: \"W:\\\\Coding\\\\paf-ecosurvey\\\\github\\\\paf-ecosurvey\\\\src\\\\app\\\\interviews\\\\page.tsx\",\n                    lineNumber: 85,\n                    columnNumber: 7\n                }, undefined),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"jsx-396ec6af33c136ec\" + \" \" + \"flex flex-wrap gap-2 mb-6\",\n                    children: interview.tags.map((tag, index)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                            className: \"jsx-396ec6af33c136ec\" + \" \" + \"text-xs px-3 py-1 rounded-full bg-[#1A1A1A] text-[#FF2670]\",\n                            children: [\n                                \"#\",\n                                tag\n                            ]\n                        }, index, true, {\n                            fileName: \"W:\\\\Coding\\\\paf-ecosurvey\\\\github\\\\paf-ecosurvey\\\\src\\\\app\\\\interviews\\\\page.tsx\",\n                            lineNumber: 94,\n                            columnNumber: 11\n                        }, undefined))\n                }, void 0, false, {\n                    fileName: \"W:\\\\Coding\\\\paf-ecosurvey\\\\github\\\\paf-ecosurvey\\\\src\\\\app\\\\interviews\\\\page.tsx\",\n                    lineNumber: 92,\n                    columnNumber: 7\n                }, undefined),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"jsx-396ec6af33c136ec\" + \" \" + \"prose prose-invert max-w-none\",\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"jsx-396ec6af33c136ec\" + \" \" + \"text-white/80 leading-relaxed whitespace-pre-wrap\",\n                        children: interview.content\n                    }, void 0, false, {\n                        fileName: \"W:\\\\Coding\\\\paf-ecosurvey\\\\github\\\\paf-ecosurvey\\\\src\\\\app\\\\interviews\\\\page.tsx\",\n                        lineNumber: 104,\n                        columnNumber: 9\n                    }, undefined)\n                }, void 0, false, {\n                    fileName: \"W:\\\\Coding\\\\paf-ecosurvey\\\\github\\\\paf-ecosurvey\\\\src\\\\app\\\\interviews\\\\page.tsx\",\n                    lineNumber: 103,\n                    columnNumber: 7\n                }, undefined)\n            ]\n        }, void 0, true, {\n            fileName: \"W:\\\\Coding\\\\paf-ecosurvey\\\\github\\\\paf-ecosurvey\\\\src\\\\app\\\\interviews\\\\page.tsx\",\n            lineNumber: 53,\n            columnNumber: 5\n        }, undefined)\n    }, void 0, false, {\n        fileName: \"W:\\\\Coding\\\\paf-ecosurvey\\\\github\\\\paf-ecosurvey\\\\src\\\\app\\\\interviews\\\\page.tsx\",\n        lineNumber: 52,\n        columnNumber: 3\n    }, undefined);\n};\n_c1 = InterviewModal;\n// Utility function to convert interviews to CSV\nconst convertToCSV = (interviews)=>{\n    const headers = [\n        'ID',\n        'Role',\n        'Tags',\n        'Content'\n    ];\n    const rows = interviews.map((interview)=>[\n            interview.id,\n            interview.role,\n            interview.tags.join(', '),\n            interview.content.replace(/\"/g, '\"\"') // Escape quotes for CSV\n        ]);\n    return [\n        headers,\n        ...rows\n    ].map((row)=>row.map((cell)=>'\"'.concat(cell, '\"')).join(',')).join('\\n');\n};\n// Utility function to convert interviews to Markdown\nconst convertToMarkdown = (interviews)=>{\n    return interviews.map((interview)=>\"\\n# \".concat(interview.role, \"\\nID: \").concat(interview.id, \"\\n\\n## Tags\\n\").concat(interview.tags.map((tag)=>\"- \".concat(tag)).join('\\n'), \"\\n\\n## Content\\n\").concat(interview.content, \"\\n\")).join('\\n\\n---\\n\\n');\n};\n// Utility function to trigger download\nconst downloadFile = (content, filename)=>{\n    const blob = new Blob([\n        content\n    ], {\n        type: 'text/plain;charset=utf-8'\n    });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = filename;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    URL.revokeObjectURL(url);\n};\nfunction InterviewsPage() {\n    _s();\n    const [selectedInterview, setSelectedInterview] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(null);\n    const [searchQuery, setSearchQuery] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)('');\n    const filteredInterviews = _interviewData__WEBPACK_IMPORTED_MODULE_3__.interviews.filter((interview)=>{\n        if (!searchQuery) return true;\n        const searchLower = searchQuery.toLowerCase();\n        return interview.role.toLowerCase().includes(searchLower) || interview.content.toLowerCase().includes(searchLower);\n    });\n    const handleDownload = (format)=>{\n        const timestamp = new Date().toISOString().split('T')[0];\n        if (format === 'csv') {\n            const csvContent = convertToCSV(filteredInterviews);\n            downloadFile(csvContent, \"paf-interviews-\".concat(timestamp, \".csv\"));\n        } else {\n            const mdContent = convertToMarkdown(filteredInterviews);\n            downloadFile(mdContent, \"paf-interviews-\".concat(timestamp, \".md\"));\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"min-h-screen bg-black text-white p-8\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"max-w-7xl mx-auto\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"flex items-center justify-between mb-12\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h1\", {\n                                        className: \"text-4xl font-bold mb-4\",\n                                        children: \"Interviews\"\n                                    }, void 0, false, {\n                                        fileName: \"W:\\\\Coding\\\\paf-ecosurvey\\\\github\\\\paf-ecosurvey\\\\src\\\\app\\\\interviews\\\\page.tsx\",\n                                        lineNumber: 183,\n                                        columnNumber: 13\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                        className: \"text-gray-400 max-w-2xl\",\n                                        children: \"Insights and perspectives from ecosystem stakeholders. All interviews are presented anonymously to protect privacy while sharing valuable insights.\"\n                                    }, void 0, false, {\n                                        fileName: \"W:\\\\Coding\\\\paf-ecosurvey\\\\github\\\\paf-ecosurvey\\\\src\\\\app\\\\interviews\\\\page.tsx\",\n                                        lineNumber: 184,\n                                        columnNumber: 13\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"W:\\\\Coding\\\\paf-ecosurvey\\\\github\\\\paf-ecosurvey\\\\src\\\\app\\\\interviews\\\\page.tsx\",\n                                lineNumber: 182,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"flex items-center gap-4\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                        onClick: ()=>handleDownload('md'),\n                                        className: \"px-4 py-2 border border-[#FF2670] rounded-lg text-[#FF2670] hover:bg-[#FF2670] hover:text-black transition-all duration-300 flex items-center gap-2\",\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                                className: \"w-4 h-4\",\n                                                fill: \"none\",\n                                                stroke: \"currentColor\",\n                                                viewBox: \"0 0 24 24\",\n                                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                                    strokeLinecap: \"round\",\n                                                    strokeLinejoin: \"round\",\n                                                    strokeWidth: 2,\n                                                    d: \"M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4\"\n                                                }, void 0, false, {\n                                                    fileName: \"W:\\\\Coding\\\\paf-ecosurvey\\\\github\\\\paf-ecosurvey\\\\src\\\\app\\\\interviews\\\\page.tsx\",\n                                                    lineNumber: 194,\n                                                    columnNumber: 17\n                                                }, this)\n                                            }, void 0, false, {\n                                                fileName: \"W:\\\\Coding\\\\paf-ecosurvey\\\\github\\\\paf-ecosurvey\\\\src\\\\app\\\\interviews\\\\page.tsx\",\n                                                lineNumber: 193,\n                                                columnNumber: 15\n                                            }, this),\n                                            \"Download MD\"\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"W:\\\\Coding\\\\paf-ecosurvey\\\\github\\\\paf-ecosurvey\\\\src\\\\app\\\\interviews\\\\page.tsx\",\n                                        lineNumber: 189,\n                                        columnNumber: 13\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                        onClick: ()=>handleDownload('csv'),\n                                        className: \"px-4 py-2 border border-[#FF2670] rounded-lg text-[#FF2670] hover:bg-[#FF2670] hover:text-black transition-all duration-300 flex items-center gap-2\",\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                                className: \"w-4 h-4\",\n                                                fill: \"none\",\n                                                stroke: \"currentColor\",\n                                                viewBox: \"0 0 24 24\",\n                                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                                    strokeLinecap: \"round\",\n                                                    strokeLinejoin: \"round\",\n                                                    strokeWidth: 2,\n                                                    d: \"M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4\"\n                                                }, void 0, false, {\n                                                    fileName: \"W:\\\\Coding\\\\paf-ecosurvey\\\\github\\\\paf-ecosurvey\\\\src\\\\app\\\\interviews\\\\page.tsx\",\n                                                    lineNumber: 203,\n                                                    columnNumber: 17\n                                                }, this)\n                                            }, void 0, false, {\n                                                fileName: \"W:\\\\Coding\\\\paf-ecosurvey\\\\github\\\\paf-ecosurvey\\\\src\\\\app\\\\interviews\\\\page.tsx\",\n                                                lineNumber: 202,\n                                                columnNumber: 15\n                                            }, this),\n                                            \"Download CSV\"\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"W:\\\\Coding\\\\paf-ecosurvey\\\\github\\\\paf-ecosurvey\\\\src\\\\app\\\\interviews\\\\page.tsx\",\n                                        lineNumber: 198,\n                                        columnNumber: 13\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"W:\\\\Coding\\\\paf-ecosurvey\\\\github\\\\paf-ecosurvey\\\\src\\\\app\\\\interviews\\\\page.tsx\",\n                                lineNumber: 188,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"W:\\\\Coding\\\\paf-ecosurvey\\\\github\\\\paf-ecosurvey\\\\src\\\\app\\\\interviews\\\\page.tsx\",\n                        lineNumber: 181,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"mb-8\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                            type: \"text\",\n                            placeholder: \"Search interviews...\",\n                            value: searchQuery,\n                            onChange: (e)=>setSearchQuery(e.target.value),\n                            className: \"w-full bg-white/5 border border-white/10 rounded-lg px-4 py-2 text-white placeholder-gray-400 focus:outline-none focus:border-[#FF2670]\"\n                        }, void 0, false, {\n                            fileName: \"W:\\\\Coding\\\\paf-ecosurvey\\\\github\\\\paf-ecosurvey\\\\src\\\\app\\\\interviews\\\\page.tsx\",\n                            lineNumber: 212,\n                            columnNumber: 11\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"W:\\\\Coding\\\\paf-ecosurvey\\\\github\\\\paf-ecosurvey\\\\src\\\\app\\\\interviews\\\\page.tsx\",\n                        lineNumber: 211,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"text-gray-400 mb-4\",\n                        children: [\n                            \"Showing \",\n                            filteredInterviews.length,\n                            \" interviews\"\n                        ]\n                    }, void 0, true, {\n                        fileName: \"W:\\\\Coding\\\\paf-ecosurvey\\\\github\\\\paf-ecosurvey\\\\src\\\\app\\\\interviews\\\\page.tsx\",\n                        lineNumber: 222,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\",\n                        children: filteredInterviews.map((interview)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(InterviewCard, {\n                                interview: interview,\n                                onClick: ()=>setSelectedInterview(interview)\n                            }, interview.id, false, {\n                                fileName: \"W:\\\\Coding\\\\paf-ecosurvey\\\\github\\\\paf-ecosurvey\\\\src\\\\app\\\\interviews\\\\page.tsx\",\n                                lineNumber: 228,\n                                columnNumber: 13\n                            }, this))\n                    }, void 0, false, {\n                        fileName: \"W:\\\\Coding\\\\paf-ecosurvey\\\\github\\\\paf-ecosurvey\\\\src\\\\app\\\\interviews\\\\page.tsx\",\n                        lineNumber: 226,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"W:\\\\Coding\\\\paf-ecosurvey\\\\github\\\\paf-ecosurvey\\\\src\\\\app\\\\interviews\\\\page.tsx\",\n                lineNumber: 180,\n                columnNumber: 7\n            }, this),\n            selectedInterview && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(InterviewModal, {\n                interview: selectedInterview,\n                onClose: ()=>setSelectedInterview(null)\n            }, void 0, false, {\n                fileName: \"W:\\\\Coding\\\\paf-ecosurvey\\\\github\\\\paf-ecosurvey\\\\src\\\\app\\\\interviews\\\\page.tsx\",\n                lineNumber: 238,\n                columnNumber: 9\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"W:\\\\Coding\\\\paf-ecosurvey\\\\github\\\\paf-ecosurvey\\\\src\\\\app\\\\interviews\\\\page.tsx\",\n        lineNumber: 179,\n        columnNumber: 5\n    }, this);\n}\n_s(InterviewsPage, \"sA7ZFpagfVny28u90mTIv3vgXEY=\");\n_c2 = InterviewsPage;\nvar _c, _c1, _c2;\n$RefreshReg$(_c, \"InterviewCard\");\n$RefreshReg$(_c1, \"InterviewModal\");\n$RefreshReg$(_c2, \"InterviewsPage\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/interviews/page.tsx\n"));

/***/ })

},
/******/ __webpack_require__ => { // webpackRuntimeModules
/******/ var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
/******/ __webpack_require__.O(0, ["main-app"], () => (__webpack_exec__("(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22W%3A%5C%5CCoding%5C%5Cpaf-ecosurvey%5C%5Cgithub%5C%5Cpaf-ecosurvey%5C%5Csrc%5C%5Capp%5C%5Cinterviews%5C%5Cpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false!")));
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);